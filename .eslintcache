[{"D:\\Chat\\react-chat\\src\\index.js":"1","D:\\Chat\\react-chat\\src\\App.js":"2","D:\\Chat\\react-chat\\src\\reportWebVitals.js":"3","D:\\Chat\\react-chat\\src\\components\\loginBar\\index.js":"4","D:\\Chat\\react-chat\\src\\components\\Users\\index.js":"5","D:\\Chat\\react-chat\\src\\components\\Chat\\index.js":"6","D:\\Chat\\react-chat\\src\\utils\\socket.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":723,"mtime":1611158458223,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1018,"mtime":1611090996409,"results":"12","hashOfConfig":"9"},{"size":688,"mtime":1611078433010,"results":"13","hashOfConfig":"9"},{"size":3181,"mtime":1611160720237,"results":"14","hashOfConfig":"9"},{"size":157,"mtime":1611161099232,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"sfyv1h",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\Chat\\react-chat\\src\\index.js",[],["34","35"],"D:\\Chat\\react-chat\\src\\App.js",["36"],"import { useEffect, useState } from 'react';\nimport './App.css';\nimport Chat from './components/Chat';\nimport LoginBar from './components/loginBar/index'\nimport Users from './components/Users';\nimport {Fragment} from \"react\"\nimport { socket } from './utils/socket';\n\nfunction App() {\n  useEffect(()=>{\n    if(localStorage.getItem('name')){\n      socket.emit('new_user_connected', localStorage.getItem('name'))\n      }\n    else return\n  },[])\n  const [hasUser, setHasUser] = useState(false)\n  return (\n    <div className=\"App\">\n      {localStorage.getItem(\"name\")?\n      <Fragment>\n          <Users/>\n          <Chat/>\n        </Fragment>:\n        <LoginBar hasUser = {setHasUser}/> }\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Chat\\react-chat\\src\\reportWebVitals.js",[],"D:\\Chat\\react-chat\\src\\components\\loginBar\\index.js",[],"D:\\Chat\\react-chat\\src\\components\\Users\\index.js",[],["37","38"],"D:\\Chat\\react-chat\\src\\components\\Chat\\index.js",["39"],"import React,{useEffect, useState, useRef} from \"react\"\r\nimport { socket } from \"../../utils/socket\"\r\nimport \"./style.css\"\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\n\r\nconst Chat = ()=>{\r\n\r\n\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [chatdata, setChatData] = useState([])\r\n    \r\n\r\n    useEffect(()=>{\r\n        socket.once('allData', (data)=>{\r\n            setChatData(data)\r\n            console.log(data)\r\n        })\r\n         socket.on('data_chat_back_one', (data)=>{\r\n            setChatData(oldMessages => ([...oldMessages,data]))\r\n        } ) }, [])\r\n\r\n    function handleChange(event){\r\n        setMsg(event.target.value)\r\n    }\r\n    function handleKeyDown(event){\r\n        if(event.key === 'Enter'){\r\n            handleClick()\r\n        }\r\n    }\r\n    const handleClick = ()=>{\r\n            if(msg){\r\n                let date = Date.now()\r\n                \r\n            socket.emit(\"msg_from_front\", {\r\n                name: isMyself,\r\n                message: msg,\r\n                date: date\r\n            })\r\n            setMsg(\"\")\r\n        }\r\n    }\r\n    const isMyself = localStorage.getItem(\"name\")\r\n\r\n\r\n    \r\n    return <div className = \"Chat\">\r\n        <ScrollToBottom debug = {false} className = \"chatWindow\">\r\n            {chatdata.map(({name, message, date}, index)=>{\r\n                const asd = new Date(date)\r\n                const finalDate = asd.getMinutes()>=10?(String(asd.getHours())+\":\"+String(asd.getMinutes())):(String(asd.getHours())+\":0\"+String(asd.getMinutes()))\r\n                return <div className ={(name===isMyself)? \"chatItem myMsg\":\"chatItem\"} key = {index}>\r\n                    <div className = \"dateName\">\r\n                        <span>{(name===isMyself)?\"Вы\":name}</span>\r\n                        <p>{finalDate}</p>\r\n                    </div>\r\n                    <p>{message}</p>\r\n                </div>\r\n            })}\r\n        </ScrollToBottom>\r\n        <div className = \"msgBar\">\r\n            <input className = \"msgInput\" placeholder = \"Ваше сообщение ...\" value = {msg} onChange = {handleChange} onKeyDown = {handleKeyDown} />\r\n            <svg className = \"msgButton\" width=\"61\" height=\"61\" viewBox=\"0 0 61 61\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" onClick = {handleClick} >\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.9236 60.1274C47.4922 60.1274 60.9236 46.696 60.9236 30.1274C60.9236 13.5589 47.4922 0.127441 30.9236 0.127441C14.3551 0.127441 0.923645 13.5589 0.923645 30.1274C0.923645 46.696 14.3551 60.1274 30.9236 60.1274Z\" fill=\"#DBE6FA\"/>\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.9236 22.1274L27.9236 33.1274L38.9236 22.1274Z\" fill=\"black\" fill-opacity=\"0.01\"/>\r\n    <path d=\"M38.9236 22.1274L27.9236 33.1274\" stroke=\"#343C4B\"/>\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.9236 22.1274L31.9236 41.1274L27.9236 33.1274L19.9236 29.1274L38.9236 22.1274Z\" fill=\"black\" fill-opacity=\"0.01\"/>\r\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.9236 22.1274L31.9236 41.1274L27.9236 33.1274L19.9236 29.1274L38.9236 22.1274Z\" stroke=\"#343C4B\" stroke-linecap=\"square\"/>\r\n</svg>\r\n\r\n\r\n           </div>\r\n    </div>\r\n}\r\n\r\nexport default Chat","D:\\Chat\\react-chat\\src\\utils\\socket.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":16,"column":10,"nodeType":"46","messageId":"47","endLine":16,"endColumn":17},{"ruleId":"40","replacedBy":"48"},{"ruleId":"42","replacedBy":"49"},{"ruleId":"44","severity":1,"message":"50","line":1,"column":36,"nodeType":"46","messageId":"47","endLine":1,"endColumn":42},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'hasUser' is assigned a value but never used.","Identifier","unusedVar",["51"],["52"],"'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]