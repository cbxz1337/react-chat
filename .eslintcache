[{"D:\\Chat\\react-chat\\src\\index.js":"1","D:\\Chat\\react-chat\\src\\App.js":"2","D:\\Chat\\react-chat\\src\\reportWebVitals.js":"3","D:\\Chat\\react-chat\\src\\components\\loginBar\\index.js":"4","D:\\Chat\\react-chat\\src\\components\\Users\\index.js":"5","D:\\Chat\\react-chat\\src\\components\\Chat\\index.js":"6","D:\\Chat\\react-chat\\src\\utils\\socket.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":721,"mtime":1611074297343,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":1018,"mtime":1611090848825,"results":"12","hashOfConfig":"9"},{"size":688,"mtime":1611078433010,"results":"13","hashOfConfig":"9"},{"size":1744,"mtime":1611089998660,"results":"14","hashOfConfig":"9"},{"size":154,"mtime":1611070052672,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"sfyv1h",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"D:\\Chat\\react-chat\\src\\index.js",[],["33","34"],"D:\\Chat\\react-chat\\src\\App.js",["35"],"import { useEffect, useState } from 'react';\nimport './App.css';\nimport Chat from './components/Chat';\nimport LoginBar from './components/loginBar/index'\nimport Users from './components/Users';\nimport {Fragment} from \"react\"\nimport { socket } from './utils/socket';\n\nfunction App() {\n  useEffect(()=>{\n    if(localStorage.getItem('name')){\n      socket.emit('new_user_connected', localStorage.getItem('name'))\n    }\n    else return\n  },[])\n  const [hasUser, setHasUser] = useState(false)\n  return (\n    <div className=\"App\">\n      {localStorage.getItem(\"name\")?\n      <Fragment>\n          <Users/>\n          <Chat/>\n        </Fragment>:\n        <LoginBar hasUser = {setHasUser}/> }\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Chat\\react-chat\\src\\reportWebVitals.js",[],"D:\\Chat\\react-chat\\src\\components\\loginBar\\index.js",[],"D:\\Chat\\react-chat\\src\\components\\Users\\index.js",[],"D:\\Chat\\react-chat\\src\\components\\Chat\\index.js",["36","37","38"],"import React,{useEffect, useState, useRef} from \"react\"\r\nimport { socket } from \"../../utils/socket\"\r\nimport \"./style.css\"\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\n\r\nconst Chat = ()=>{\r\n\r\n\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [chatdata, setChatData] = useState([])\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n         socket.on('data_chat_back_one', (data)=>{\r\n            setChatData(data)\r\n        } ) }, [])\r\n\r\n    function handleChange(event){\r\n        setMsg(event.target.value)\r\n    }\r\n    function handleKeyDown(event){\r\n        if(event.key == 'Enter'){\r\n            handleClick()\r\n        }\r\n    }\r\n    const handleClick = ()=>{\r\n            if(msg){\r\n            socket.emit(\"msg_from_front\", {\r\n                name: isMyself,\r\n                message: msg\r\n            })\r\n            setMsg(\"\")\r\n            console.log(msg);\r\n        }\r\n    }\r\n    const isMyself = localStorage.getItem(\"name\")\r\n\r\n\r\n    \r\n    return <div className = \"Chat\">\r\n        <ScrollToBottom debug = {false} className = \"chatWindow\">\r\n            {chatdata.map(({name, message}, index)=>{\r\n                return <div className ={(name===isMyself)? \"chatItem myMsg\":\"chatItem\"} key = {index}>\r\n                    <span>{(name===isMyself)?\"Вы\":name}</span>\r\n                    <p>{message}</p>\r\n                </div>\r\n            })}\r\n        </ScrollToBottom>\r\n        <div className = \"msgBar\">\r\n            <input className = \"msgInput\" placeholder = \"Ваше сообщение ...\" value = {msg} onChange = {handleChange} onKeyDown = {handleKeyDown} />\r\n            <img src=\"https://via.placeholder.com/60\" className = \"msgButton\" onClick = {handleClick}>\r\n\r\n            </img>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Chat","D:\\Chat\\react-chat\\src\\utils\\socket.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":16,"column":10,"nodeType":"45","messageId":"46","endLine":16,"endColumn":17},{"ruleId":"43","severity":1,"message":"47","line":1,"column":36,"nodeType":"45","messageId":"46","endLine":1,"endColumn":42},{"ruleId":"48","severity":1,"message":"49","line":24,"column":22,"nodeType":"50","messageId":"51","endLine":24,"endColumn":24},{"ruleId":"52","severity":1,"message":"53","line":53,"column":13,"nodeType":"54","endLine":53,"endColumn":103},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'hasUser' is assigned a value but never used.","Identifier","unusedVar","'useRef' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]