{"version":3,"sources":["utils/socket.js","components/Chat/index.js","components/loginBar/index.js","components/Users/index.js","App.js","reportWebVitals.js","index.js"],"names":["socket","io","transports","Chat","useState","msg","setMsg","chatdata","setChatData","useEffect","once","data","console","log","on","oldMessages","handleClick","date","Date","now","emit","name","isMyself","message","localStorage","getItem","className","debug","map","index","asd","finalDate","getMinutes","String","getHours","placeholder","value","onChange","event","target","onKeyDown","key","width","height","viewBox","fill","xmlns","onClick","fill-rule","clip-rule","d","fill-opacity","stroke","stroke-linecap","LoginBar","props","userName","setUserName","setItem","hasUser","alert","Users","users","setUsers","item","App","setHasUser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ab681ad.chunk.js","sourcesContent":["import io from 'socket.io-client'\r\nconst socket = io('http://192.168.31.186:2070', {transports: ['websocket','io', 'polling', 'flashsocket']})\r\nexport {socket}","import React,{useEffect, useState, useRef} from \"react\"\r\nimport { socket } from \"../../utils/socket\"\r\nimport \"./style.css\"\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\n\r\n\r\nconst Chat = ()=>{\r\n\r\n\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [chatdata, setChatData] = useState([])\r\n    \r\n\r\n    useEffect(()=>{\r\n        socket.once('allData', (data)=>{\r\n            setChatData(data)\r\n            console.log(data)\r\n        })\r\n         socket.on('data_chat_back_one', (data)=>{\r\n            setChatData(oldMessages => ([...oldMessages,data]))\r\n        } ) }, [])\r\n\r\n    function handleChange(event){\r\n        setMsg(event.target.value)\r\n    }\r\n    function handleKeyDown(event){\r\n        if(event.key === 'Enter'){\r\n            handleClick()\r\n        }\r\n    }\r\n    const handleClick = ()=>{\r\n            if(msg){\r\n                let date = Date.now()\r\n                \r\n            socket.emit(\"msg_from_front\", {\r\n                name: isMyself,\r\n                message: msg,\r\n                date: date\r\n            })\r\n            setMsg(\"\")\r\n        }\r\n    }\r\n    const isMyself = localStorage.getItem(\"name\")\r\n\r\n\r\n    \r\n    return <div className = \"Chat\">\r\n        <ScrollToBottom debug = {false} className = \"chatWindow\">\r\n            {chatdata.map(({name, message, date}, index)=>{\r\n                const asd = new Date(date)\r\n                const finalDate = asd.getMinutes()>=10?(String(asd.getHours())+\":\"+String(asd.getMinutes())):(String(asd.getHours())+\":0\"+String(asd.getMinutes()))\r\n                return <div className ={(name===isMyself)? \"chatItem myMsg\":\"chatItem\"} key = {index}>\r\n                    <div className = \"dateName\">\r\n                        <span>{(name===isMyself)?\"Вы\":name}</span>\r\n                        <p>{finalDate}</p>\r\n                    </div>\r\n                    <p>{message}</p>\r\n                </div>\r\n            })}\r\n        </ScrollToBottom>\r\n        <div className = \"msgBar\">\r\n            <input className = \"msgInput\" placeholder = \"Ваше сообщение ...\" value = {msg} onChange = {handleChange} onKeyDown = {handleKeyDown} />\r\n            <svg className = \"msgButton\" width=\"61\" height=\"61\" viewBox=\"0 0 61 61\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" onClick = {handleClick} >\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.9236 60.1274C47.4922 60.1274 60.9236 46.696 60.9236 30.1274C60.9236 13.5589 47.4922 0.127441 30.9236 0.127441C14.3551 0.127441 0.923645 13.5589 0.923645 30.1274C0.923645 46.696 14.3551 60.1274 30.9236 60.1274Z\" fill=\"#DBE6FA\"/>\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.9236 22.1274L27.9236 33.1274L38.9236 22.1274Z\" fill=\"black\" fill-opacity=\"0.01\"/>\r\n    <path d=\"M38.9236 22.1274L27.9236 33.1274\" stroke=\"#343C4B\"/>\r\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.9236 22.1274L31.9236 41.1274L27.9236 33.1274L19.9236 29.1274L38.9236 22.1274Z\" fill=\"black\" fill-opacity=\"0.01\"/>\r\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.9236 22.1274L31.9236 41.1274L27.9236 33.1274L19.9236 29.1274L38.9236 22.1274Z\" stroke=\"#343C4B\" stroke-linecap=\"square\"/>\r\n</svg>\r\n\r\n\r\n           </div>\r\n    </div>\r\n}\r\n\r\nexport default Chat","import React, { useState } from 'react'\r\nimport { socket } from '../../utils/socket'\r\nimport \"./style.css\"\r\n\r\nconst LoginBar = (props)=>{\r\n    let [userName, setUserName] = useState(\"\")\r\n\r\n    function handleChange(event){\r\n        setUserName(event.target.value)\r\n    }\r\n    function handeClick(){\r\n        console.log(userName)\r\n        if(!userName){\r\n            alert(\"Вы не ввели имя.\")\r\n            return\r\n        }\r\n        localStorage.setItem(\"name\", userName)\r\n        socket.emit('new_user_connected', userName)\r\n        props.hasUser(true)   \r\n    }\r\n    return <div className=\"LoginBar\">\r\n        <h1>\r\n            Friends Chat\r\n        </h1>\r\n        <div className = \"loginGroup\">\r\n            <input placeholder = \"Ваше имя\" \r\n                onChange ={handleChange}\r\n                value = {userName} \r\n            />\r\n            <button onClick = {handeClick}>\r\n                Войти\r\n             </button>  \r\n        </div>\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default LoginBar","import React, {useEffect, useState} from \"react\"\r\nimport { socket } from \"../../utils/socket\"\r\nimport \"./style.css\"\r\n\r\nconst Users = ()=>{\r\n    const [users, setUsers] = useState([])\r\n    useEffect(()=>{\r\n        socket.on('online_users', (data)=>{\r\n            setUsers(data)\r\n            console.log(data)\r\n         })}, [])\r\n    return <div className = \"Users\">\r\n        <h1>\r\n            Friends Chat\r\n        </h1>\r\n        <div className = \"userList\">\r\n            {users.map((item, index)=>{\r\n                return <div className = \"userItem\" key = {index}>\r\n                    {item.name}\r\n            </div>\r\n        })}\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default Users","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Chat from './components/Chat';\nimport LoginBar from './components/loginBar/index'\nimport Users from './components/Users';\nimport {Fragment} from \"react\"\nimport { socket } from './utils/socket';\n\nfunction App() {\n  useEffect(()=>{\n    if(localStorage.getItem('name')){\n      socket.emit('new_user_connected', localStorage.getItem('name'))\n      }\n    else return\n  },[])\n  const [hasUser, setHasUser] = useState(false)\n  return (\n    <div className=\"App\">\n      {localStorage.getItem(\"name\")?\n      <Fragment>\n          <Users/>\n          <Chat/>\n        </Fragment>:\n        <LoginBar hasUser = {setHasUser}/> }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}